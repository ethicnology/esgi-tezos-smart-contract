{ parameter (or (or (string %pause) (unit %reset)) (nat %vote)) ;
  storage (pair (pair (nat %no) (bool %status)) (pair (set %voters address) (nat %yes))) ;
  code { PUSH address "tz1QUdRxx48qhUvDkBxo3hEfvr4kzLDPKWNm" ;
         LAMBDA
           (pair (pair (nat %no) (bool %status)) (pair (set %voters address) (nat %yes)))
           (pair (pair (nat %no) (bool %status)) (pair (set %voters address) (nat %yes)))
           { DUP ;
             DIP { DUP } ;
             SWAP ;
             CDR ;
             CAR ;
             PUSH bool True ;
             SENDER ;
             UPDATE ;
             DIP { DUP ; CAR ; SWAP ; CDR ; CDR } ;
             PAIR ;
             SWAP ;
             PAIR ;
             DIP { DROP } } ;
         DIP 2 { DUP } ;
         DIG 2 ;
         CDR ;
         DIP 3 { DUP } ;
         DIG 3 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 DIP { DIP 2 { DUP } ; DIG 2 } ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIP { DUP } ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 DIP 8 { DUP } ;
                 DIG 8 ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "Access denied." ; FAILWITH }
                    { DIP { DUP } ;
                      SWAP ;
                      DIP { DUP } ;
                      SWAP ;
                      DIP 10 { DUP } ;
                      DIG 10 ;
                      SENDER ;
                      COMPARE ;
                      EQ ;
                      DIP { DIP 4 { DUP } ; DIG 4 ; PUSH string "True" ; SWAP ; COMPARE ; EQ } ;
                      AND ;
                      IF { DIP 3 { DUP } ;
                           DIG 3 ;
                           DIP 2 { DUP } ;
                           DIG 2 ;
                           DIP 6 { DUP } ;
                           DIG 6 ;
                           PUSH string "True" ;
                           SWAP ;
                           COMPARE ;
                           EQ ;
                           IF { DIP { DUP } ;
                                SWAP ;
                                DIP 6 { DUP } ;
                                DIG 6 ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                CAR ;
                                PUSH bool True ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                DIP { DROP } }
                              { DIP 5 { DUP } ;
                                DIG 5 ;
                                DIP 2 { DUP } ;
                                DIG 2 ;
                                DIP 8 { DUP } ;
                                DIG 8 ;
                                PUSH string "False" ;
                                SWAP ;
                                COMPARE ;
                                EQ ;
                                IF { DIP { DUP } ;
                                     SWAP ;
                                     DIP 8 { DUP } ;
                                     DIG 8 ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     CAR ;
                                     PUSH bool False ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     DIP { DROP } }
                                   { DIP { DUP } ; SWAP } ;
                                DIP { DROP 2 } } ;
                           DIP { DROP 2 } }
                         { DIP { DUP } ; SWAP } ;
                      DIP { DROP 2 } } ;
                 DUP ;
                 DIP { DROP 6 } }
               { DIP 2 { DUP } ;
                 DIG 2 ;
                 DUP ;
                 EMPTY_SET address ;
                 SWAP ;
                 DIP 7 { DUP } ;
                 DIG 7 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 DIP { DIP 2 { DUP } ;
                       DIG 2 ;
                       CAR ;
                       CDR ;
                       PUSH bool False ;
                       SWAP ;
                       COMPARE ;
                       EQ } ;
                 AND ;
                 IF { DUP ;
                      DIP 3 { DUP } ;
                      DIG 3 ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      CAR ;
                      PUSH bool True ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      CAR ;
                      PUSH nat 0 ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      CDR ;
                      PUSH nat 0 ;
                      PAIR ;
                      PAIR ;
                      DIP 3 { DUP } ;
                      DIG 3 ;
                      DIP { DUP ; CAR ; SWAP ; CDR ; CDR } ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      DIP { DROP } }
                    { PUSH string "Acces denied." ; FAILWITH } ;
                 DUP ;
                 DIP { DROP 5 } } ;
             DIP { DROP } }
           { DUP ;
             DIP { DIP { DUP } ; SWAP } ;
             PAIR ;
             DUP ;
             CAR ;
             DIP { DUP } ;
             SWAP ;
             CDR ;
             DIP 6 { DUP } ;
             DIG 6 ;
             SENDER ;
             COMPARE ;
             EQ ;
             DIP { DUP ; CDR ; CAR ; SENDER ; MEM } ;
             OR ;
             DIP { DUP ; CAR ; CDR ; PUSH bool False ; SWAP ; COMPARE ; EQ } ;
             OR ;
             IF { PUSH string "Access denied." ; FAILWITH } { PUSH unit Unit } ;
             DIP { DUP } ;
             SWAP ;
             CDR ;
             CAR ;
             SIZE ;
             DIP 2 { DUP } ;
             DIG 2 ;
             DIP { DUP } ;
             SWAP ;
             PUSH nat 10 ;
             SWAP ;
             COMPARE ;
             GE ;
             IF { DIP 3 { DUP } ;
                  DIG 3 ;
                  CDR ;
                  CDR ;
                  DIP { DIP 3 { DUP } ; DIG 3 ; CAR ; CAR } ;
                  COMPARE ;
                  GT ;
                  IF { PUSH string "Yes won" ; FAILWITH } { PUSH string "No won" ; FAILWITH } }
                { DIP 3 { DUP } ;
                  DIG 3 ;
                  DIP 2 { DUP } ;
                  DIG 2 ;
                  PUSH nat 9 ;
                  SWAP ;
                  COMPARE ;
                  EQ ;
                  IF { DIP 4 { DUP } ;
                       DIG 4 ;
                       DIP { DIP 9 { DUP } ; DIG 9 } ;
                       EXEC ;
                       DUP ;
                       DIP 7 { DUP } ;
                       DIG 7 ;
                       PUSH nat 1 ;
                       SWAP ;
                       COMPARE ;
                       EQ ;
                       IF { DIP { DUP } ;
                            SWAP ;
                            DIP 2 { DUP } ;
                            DIG 2 ;
                            CDR ;
                            CDR ;
                            PUSH nat 1 ;
                            ADD ;
                            DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DIP { DUP } ;
                            SWAP ;
                            DIP { DUP } ;
                            SWAP ;
                            DIP { DROP 2 } }
                          { DIP { DUP } ;
                            SWAP ;
                            DIP 8 { DUP } ;
                            DIG 8 ;
                            PUSH nat 2 ;
                            SWAP ;
                            COMPARE ;
                            EQ ;
                            IF { DIP 2 { DUP } ;
                                 DIG 2 ;
                                 DIP 3 { DUP } ;
                                 DIG 3 ;
                                 CAR ;
                                 CAR ;
                                 PUSH nat 1 ;
                                 ADD ;
                                 DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                                 PAIR ;
                                 PAIR ;
                                 DIP { DUP } ;
                                 SWAP ;
                                 DIP { DUP } ;
                                 SWAP ;
                                 DIP { DROP 2 } }
                               { DUP } ;
                            DIP 2 { DUP } ;
                            DIG 2 ;
                            DIP { DUP } ;
                            SWAP ;
                            DIP { DROP 3 } } ;
                       DUP ;
                       DUP ;
                       CDR ;
                       CDR ;
                       DIP { DUP ; CAR ; CAR } ;
                       COMPARE ;
                       GT ;
                       IF { PUSH string "Yes won" ; FAILWITH } { PUSH string "No won" ; FAILWITH } }
                     { DIP 4 { DUP } ;
                       DIG 4 ;
                       DIP { DIP 9 { DUP } ; DIG 9 } ;
                       EXEC ;
                       DUP ;
                       DIP 7 { DUP } ;
                       DIG 7 ;
                       PUSH nat 1 ;
                       SWAP ;
                       COMPARE ;
                       EQ ;
                       IF { DIP { DUP } ;
                            SWAP ;
                            DIP 2 { DUP } ;
                            DIG 2 ;
                            CDR ;
                            CDR ;
                            PUSH nat 1 ;
                            ADD ;
                            DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DIP { DUP } ;
                            SWAP ;
                            DIP { DUP } ;
                            SWAP ;
                            DIP { DROP 2 } }
                          { DIP { DUP } ;
                            SWAP ;
                            DIP 8 { DUP } ;
                            DIG 8 ;
                            PUSH nat 2 ;
                            SWAP ;
                            COMPARE ;
                            EQ ;
                            IF { DIP 2 { DUP } ;
                                 DIG 2 ;
                                 DIP 3 { DUP } ;
                                 DIG 3 ;
                                 CAR ;
                                 CAR ;
                                 PUSH nat 1 ;
                                 ADD ;
                                 DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                                 PAIR ;
                                 PAIR ;
                                 DIP { DUP } ;
                                 SWAP ;
                                 DIP { DUP } ;
                                 SWAP ;
                                 DIP { DROP 2 } }
                               { DUP } ;
                            DIP 2 { DUP } ;
                            DIG 2 ;
                            DIP { DUP } ;
                            SWAP ;
                            DIP { DROP 3 } } ;
                       DIP 3 { DUP } ;
                       DIG 3 ;
                       DIP 3 { DUP } ;
                       DIG 3 ;
                       DIP { DROP ; DUP } ;
                       SWAP ;
                       DIP { DROP 4 } } ;
                  DIP 2 { DUP } ;
                  DIG 2 ;
                  DIP { DUP } ;
                  SWAP ;
                  DIP { DROP 3 } } ;
             DUP ;
             DIP { DROP 8 } } ;
         DUP ;
         NIL operation ;
         PAIR ;
         DIP { DROP 5 } } }


